{"ast":null,"code":"var _jsxFileName = \"/home/vanderson/Trybe/repo_projetos/trybe-wallet/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginAction } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeValue = this.changeValue.bind(this);\n    this.clickLogin = this.clickLogin.bind(this);\n    this.verifyFields = this.verifyFields.bind(this);\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true\n    };\n  }\n\n  changeValue({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    }, () => this.verifyFields());\n  }\n\n  clickLogin() {\n    const {\n      login,\n      history\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    login(email);\n    return history.push('/carteira');\n  } // Referência desta função para validação de email:\n  // https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n\n\n  validarEmail(email) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  verifyFields() {\n    const {\n      email,\n      password\n    } = this.state;\n    const numberCharacteres = 5;\n\n    if (password.length > numberCharacteres && this.validarEmail(email)) {\n      this.setState({\n        isDisabled: false\n      });\n    }\n  }\n\n  render() {\n    const {\n      email,\n      password,\n      isDisabled\n    } = this.state; // const numberCharacteres = 5;\n    // const validate = password.length > numberCharacteres && this.validarEmail(email);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }\n    }, \"Trybe Wallet\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form form-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"email-input\",\n      placeholder: \"Insira seu e-mail\",\n      id: \"email\",\n      name: \"email\",\n      type: \"text\",\n      value: email,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"password-input\",\n      placeholder: \"Insira sua senha\",\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      disabled: isDisabled,\n      onClick: this.clickLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  login: email => dispatch(loginAction(email))\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/vanderson/Trybe/repo_projetos/trybe-wallet/src/pages/Login.js"],"names":["React","PropTypes","connect","loginAction","Login","Component","constructor","props","changeValue","bind","clickLogin","verifyFields","state","email","password","isDisabled","target","name","value","setState","login","history","push","validarEmail","re","test","numberCharacteres","length","render","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginAction } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.clickLogin = this.clickLogin.bind(this);\n    this.verifyFields = this.verifyFields.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.verifyFields());\n  }\n\n  clickLogin() {\n    const { login, history } = this.props;\n    const { email } = this.state;\n    login(email);\n    return history.push('/carteira');\n  }\n\n  // Referência desta função para validação de email:\n  // https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n  validarEmail(email) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  verifyFields() {\n    const { email, password } = this.state;\n    const numberCharacteres = 5;\n    if (password.length > numberCharacteres && this.validarEmail(email)) {\n      this.setState({\n        isDisabled: false,\n      });\n    }\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    // const numberCharacteres = 5;\n    // const validate = password.length > numberCharacteres && this.validarEmail(email);\n    return (\n      <div className=\"container-login\">\n        <h1>Trybe Wallet</h1>\n        <form className=\"form form-login\">\n          <label htmlFor=\"email\">\n            Email\n            <input\n              data-testid=\"email-input\"\n              placeholder=\"Insira seu e-mail\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              value={ email }\n              onChange={ this.changeValue }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <input\n              data-testid=\"password-input\"\n              placeholder=\"Insira sua senha\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={ password }\n              onChange={ this.changeValue }\n            />\n          </label>\n          <button type=\"button\" disabled={ isDisabled } onClick={ this.clickLogin }>\n            Entrar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (email) => dispatch(loginAction(email)),\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}