{"ast":null,"code":"var _jsxFileName = \"/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/components/EditWallet.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses, editExpense, editing } from '../actions';\n\nclass EditWallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeValue = this.changeValue.bind(this);\n    this.editWallet = this.editWallet.bind(this);\n    const {\n      expenseEdit\n    } = this.props;\n    this.state = {\n      value: expenseEdit.value,\n      description: expenseEdit.description,\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchAPI\n    } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  editWallet() {\n    const {\n      edExpense,\n      edit,\n      expenseEdit\n    } = this.props;\n    edit(expenseEdit, this.state);\n    edExpense();\n    this.setState({\n      value: '',\n      description: ''\n    });\n  }\n\n  render() {\n    const {\n      value,\n      description\n    } = this.state;\n    const {\n      currencies\n    } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter(i => i !== 'USDT');\n    return /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      id: \"value\",\n      name: \"value\",\n      type: \"text\",\n      value: value,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      id: \"description\",\n      name: \"description\",\n      type: \"text\",\n      value: description,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currency\",\n      name: \"currency\",\n      \"data-testid\": \"currency-input\",\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }\n    }, arrayCurrencies && arrayCurrencies.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item,\n      key: item,\n      \"data-testid\": item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    }, item)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de Pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      id: \"method\",\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }, \"Tag:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      id: \"tag\",\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.editWallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }, \"Editar despesa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: expense => dispatch(addExpenses(expense)),\n  edExpense: id => dispatch(editExpense(id)),\n  edit: (expenseEdit, newData) => dispatch(editing(expenseEdit, newData))\n});\n\nconst mapStateToProps = ({\n  wallet\n}) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n  expenseEdit: wallet.inEditing.expenseEdit\n});\n\nEditWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  expenseEdit: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired\n  }).isRequired,\n  edExpense: PropTypes.func.isRequired,\n  edit: PropTypes.func.isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWallet);","map":{"version":3,"sources":["/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/components/EditWallet.js"],"names":["React","PropTypes","connect","fecthAwesome","addExpenses","editExpense","editing","EditWallet","Component","constructor","props","changeValue","bind","editWallet","expenseEdit","state","value","description","currency","method","tag","exchangeRates","componentDidMount","fetchAPI","target","name","setState","edExpense","edit","render","currencies","arrayCurrencies","Object","keys","filter","i","map","item","mapDispatchToProps","dispatch","add","expense","id","newData","mapStateToProps","wallet","expenses","inEditing","propTypes","func","isRequired","shape","number","string"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses, editExpense, editing } from '../actions';\n\nclass EditWallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.editWallet = this.editWallet.bind(this);\n\n    const { expenseEdit } = this.props;\n\n    this.state = {\n      value: expenseEdit.value,\n      description: expenseEdit.description,\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  editWallet() {\n    const { edExpense, edit, expenseEdit } = this.props;\n    edit(expenseEdit, this.state);\n    edExpense();\n    this.setState({ value: '', description: '' });\n  }\n\n  render() {\n    const { value, description } = this.state;\n    const { currencies } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter((i) => i !== 'USDT');\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            id=\"value\"\n            name=\"value\"\n            type=\"text\"\n            value={ value }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={ description }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ this.changeValue }\n          >\n            {arrayCurrencies && arrayCurrencies.map((item) => (\n              <option value={ item } key={ item } data-testid={ item }>\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={ this.editWallet }>Editar despesa</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: (expense) => dispatch(addExpenses(expense)),\n  edExpense: (id) => dispatch(editExpense(id)),\n  edit: (expenseEdit, newData) => dispatch(editing(expenseEdit, newData)),\n});\n\nconst mapStateToProps = ({ wallet }) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n  expenseEdit: wallet.inEditing.expenseEdit,\n});\n\nEditWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  expenseEdit: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  edExpense: PropTypes.func.isRequired,\n  edit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWallet);\n"]},"metadata":{},"sourceType":"module"}