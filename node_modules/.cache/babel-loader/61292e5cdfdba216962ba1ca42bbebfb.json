{"ast":null,"code":"import _regeneratorRuntime from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _defineProperty from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{connect}from'react-redux';import{fecthAwesome,addExpenses}from'../actions';var FormWallet=/*#__PURE__*/function(_Component){_inherits(FormWallet,_Component);var _super=_createSuper(FormWallet);function FormWallet(props){var _this;_classCallCheck(this,FormWallet);_this=_super.call(this,props);_this.changeValue=_this.changeValue.bind(_assertThisInitialized(_this));_this.handleClick=_this.handleClick.bind(_assertThisInitialized(_this));_this.state={value:'',description:'',currency:'USD',method:'Dinheiro',tag:'Alimentação',exchangeRates:{}};return _this;}_createClass(FormWallet,[{key:\"componentDidMount\",value:function componentDidMount(){var fetchAPI=this.props.fetchAPI;fetchAPI();}},{key:\"changeValue\",value:function changeValue(_ref){var target=_ref.target;var name=target.name,value=target.value;this.setState(_defineProperty({},name,value));}},{key:\"handleClick\",value:function(){var _handleClick=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var fetchAPI,_this$props,add,currencies;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:fetchAPI=this.props.fetchAPI;_context.next=3;return fetchAPI();case 3:_this$props=this.props,add=_this$props.add,currencies=_this$props.currencies;this.setState({exchangeRates:currencies});add(this.state);this.setState({value:'',description:''});case 7:case\"end\":return _context.stop();}}},_callee,this);}));function handleClick(){return _handleClick.apply(this,arguments);}return handleClick;}()},{key:\"render\",value:function render(){var _this$state=this.state,value=_this$state.value,description=_this$state.description;var currencies=this.props.currencies;var arrayCurrencies=Object.keys(currencies).filter(function(i){return i!=='USDT';});return/*#__PURE__*/React.createElement(\"form\",{className:\"form\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"value\"},\"Valor:\",/*#__PURE__*/React.createElement(\"input\",{\"data-testid\":\"value-input\",id:\"value\",name:\"value\",type:\"text\",value:value,onChange:this.changeValue})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"description\"},\"Descri\\xE7\\xE3o:\",/*#__PURE__*/React.createElement(\"input\",{\"data-testid\":\"description-input\",id:\"description\",name:\"description\",type:\"text\",value:description,onChange:this.changeValue})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"currency\"},\"Moeda:\",/*#__PURE__*/React.createElement(\"select\",{id:\"currency\",name:\"currency\",\"data-testid\":\"currency-input\",onChange:this.changeValue},arrayCurrencies&&arrayCurrencies.map(function(item){return/*#__PURE__*/React.createElement(\"option\",{value:item,key:item,\"data-testid\":item},item);}))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"method\"},\"M\\xE9todo de Pagamento:\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"method-input\",name:\"method\",id:\"method\",onChange:this.changeValue},/*#__PURE__*/React.createElement(\"option\",{value:\"Dinheiro\"},\"Dinheiro\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Cart\\xE3o de cr\\xE9dito\"},\"Cart\\xE3o de cr\\xE9dito\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Cart\\xE3o de d\\xE9bito\"},\"Cart\\xE3o de d\\xE9bito\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"tag\"},\"Tag:\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"tag-input\",name:\"tag\",id:\"tag\",onChange:this.changeValue},/*#__PURE__*/React.createElement(\"option\",{value:\"Alimenta\\xE7\\xE3o\"},\"Alimenta\\xE7\\xE3o\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Lazer\"},\"Lazer\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Trabalho\"},\"Trabalho\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Transporte\"},\"Transporte\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Sa\\xFAde\"},\"Sa\\xFAde\"))),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:this.handleClick},\"Adicionar despesa\"));}}]);return FormWallet;}(Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchAPI:function fetchAPI(){return dispatch(fecthAwesome());},add:function add(expense){return dispatch(addExpenses(expense));}};};var mapStateToProps=function mapStateToProps(_ref2){var wallet=_ref2.wallet;return{currencies:wallet.currencies,expenses:wallet.expenses};};export default connect(mapStateToProps,mapDispatchToProps)(FormWallet);","map":{"version":3,"sources":["/home/vanderson/Trybe/repo_projetos/trybe-wallet/src/components/FormWallet.js"],"names":["React","Component","connect","fecthAwesome","addExpenses","FormWallet","props","changeValue","bind","handleClick","state","value","description","currency","method","tag","exchangeRates","fetchAPI","target","name","setState","add","currencies","arrayCurrencies","Object","keys","filter","i","map","item","mapDispatchToProps","dispatch","expense","mapStateToProps","wallet","expenses"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses } from '../actions';\n\nclass FormWallet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  async handleClick() {\n    const { fetchAPI } = this.props;\n    await fetchAPI();\n    const { add, currencies } = this.props;\n    this.setState({ exchangeRates: currencies });\n    add(this.state);\n    this.setState({ value: '', description: '' });\n  }\n\n  render() {\n    const { value, description } = this.state;\n    const { currencies } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter((i) => i !== 'USDT');\n    return (\n      <form className=\"form\">\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            id=\"value\"\n            name=\"value\"\n            type=\"text\"\n            value={ value }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={ description }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ this.changeValue }\n          >\n            {arrayCurrencies && arrayCurrencies.map((item) => (\n              <option value={ item } key={ item } data-testid={ item }>\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={ this.handleClick }>Adicionar despesa</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: (expense) => dispatch(addExpenses(expense)),\n});\n\nconst mapStateToProps = ({ wallet }) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n});\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  add: PropTypes.func.isRequired,\n  expenseEdit: PropTypes.shape({}).isRequired,\n  exchangeRates: PropTypes.shape({}).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n"]},"metadata":{},"sourceType":"module"}