{"ast":null,"code":"import _defineProperty from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{fecthAwesome,addExpenses,editExpense,editing}from'../actions';var EditWallet=/*#__PURE__*/function(_React$Component){_inherits(EditWallet,_React$Component);var _super=_createSuper(EditWallet);function EditWallet(props){var _this;_classCallCheck(this,EditWallet);_this=_super.call(this,props);_this.changeValue=_this.changeValue.bind(_assertThisInitialized(_this));_this.editWallet=_this.editWallet.bind(_assertThisInitialized(_this));var expenseEdit=_this.props.expenseEdit;_this.state={value:expenseEdit.value,description:expenseEdit.description,currency:'USD',method:'Dinheiro',tag:'Alimentação',exchangeRates:{}};return _this;}_createClass(EditWallet,[{key:\"componentDidMount\",value:function componentDidMount(){var fetchAPI=this.props.fetchAPI;fetchAPI();}},{key:\"changeValue\",value:function changeValue(_ref){var target=_ref.target;var name=target.name,value=target.value;this.setState(_defineProperty({},name,value));}},{key:\"editWallet\",value:function editWallet(){var _this$props=this.props,edExpense=_this$props.edExpense,edit=_this$props.edit,expenseEdit=_this$props.expenseEdit;edit(expenseEdit,this.state);edExpense();this.setState({value:'',description:''});}},{key:\"render\",value:function render(){var _this$state=this.state,value=_this$state.value,description=_this$state.description;var currencies=this.props.currencies;var arrayCurrencies=Object.keys(currencies).filter(function(i){return i!=='USDT';});return/*#__PURE__*/React.createElement(\"form\",{className:\"form-edit\"},/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"value\"},\"Valor:\",/*#__PURE__*/React.createElement(\"input\",{\"data-testid\":\"value-input\",id:\"value\",name:\"value\",type:\"text\",value:value,onChange:this.changeValue})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"description\"},\"Descri\\xE7\\xE3o:\",/*#__PURE__*/React.createElement(\"input\",{\"data-testid\":\"description-input\",id:\"description\",name:\"description\",type:\"text\",value:description,onChange:this.changeValue})),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"currency\"},\"Moeda:\",/*#__PURE__*/React.createElement(\"select\",{id:\"currency\",name:\"currency\",\"data-testid\":\"currency-input\",onChange:this.changeValue},arrayCurrencies&&arrayCurrencies.map(function(item){return/*#__PURE__*/React.createElement(\"option\",{value:item,key:item,\"data-testid\":item},item);}))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"method\"},\"M\\xE9todo de Pagamento:\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"method-input\",name:\"method\",id:\"method\",onChange:this.changeValue},/*#__PURE__*/React.createElement(\"option\",{value:\"Dinheiro\"},\"Dinheiro\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Cart\\xE3o de cr\\xE9dito\"},\"Cart\\xE3o de cr\\xE9dito\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Cart\\xE3o de d\\xE9bito\"},\"Cart\\xE3o de d\\xE9bito\"))),/*#__PURE__*/React.createElement(\"label\",{htmlFor:\"tag\"},\"Tag:\",/*#__PURE__*/React.createElement(\"select\",{\"data-testid\":\"tag-input\",name:\"tag\",id:\"tag\",onChange:this.changeValue},/*#__PURE__*/React.createElement(\"option\",{value:\"Alimenta\\xE7\\xE3o\"},\"Alimenta\\xE7\\xE3o\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Lazer\"},\"Lazer\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Trabalho\"},\"Trabalho\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Transporte\"},\"Transporte\"),/*#__PURE__*/React.createElement(\"option\",{value:\"Sa\\xFAde\"},\"Sa\\xFAde\"))),/*#__PURE__*/React.createElement(\"button\",{type:\"button\",onClick:this.editWallet},\"Editar despesa\"));}}]);return EditWallet;}(React.Component);var mapDispatchToProps=function mapDispatchToProps(dispatch){return{fetchAPI:function fetchAPI(){return dispatch(fecthAwesome());},add:function add(expense){return dispatch(addExpenses(expense));},edExpense:function edExpense(id){return dispatch(editExpense(id));},edit:function edit(expenseEdit,newData){return dispatch(editing(expenseEdit,newData));}};};var mapStateToProps=function mapStateToProps(_ref2){var wallet=_ref2.wallet,edit=_ref2.edit;return{currencies:wallet.currencies,expenses:wallet.expenses,expenseEdit:edit.inEditing.expenseEdit};};export default connect(mapStateToProps,mapDispatchToProps)(EditWallet);","map":{"version":3,"sources":["/home/vanderson/Trybe/repo_projetos/trybe-wallet/src/components/EditWallet.js"],"names":["React","connect","fecthAwesome","addExpenses","editExpense","editing","EditWallet","props","changeValue","bind","editWallet","expenseEdit","state","value","description","currency","method","tag","exchangeRates","fetchAPI","target","name","setState","edExpense","edit","currencies","arrayCurrencies","Object","keys","filter","i","map","item","Component","mapDispatchToProps","dispatch","add","expense","id","newData","mapStateToProps","wallet","expenses","inEditing"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses, editExpense, editing } from '../actions';\n\nclass EditWallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.editWallet = this.editWallet.bind(this);\n\n    const { expenseEdit } = this.props;\n\n    this.state = {\n      value: expenseEdit.value,\n      description: expenseEdit.description,\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  editWallet() {\n    const { edExpense, edit, expenseEdit } = this.props;\n    edit(expenseEdit, this.state);\n    edExpense();\n    this.setState({ value: '', description: '' });\n  }\n\n  render() {\n    const { value, description } = this.state;\n    const { currencies } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter((i) => i !== 'USDT');\n    return (\n      <form className=\"form-edit\">\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            id=\"value\"\n            name=\"value\"\n            type=\"text\"\n            value={ value }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={ description }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ this.changeValue }\n          >\n            {arrayCurrencies && arrayCurrencies.map((item) => (\n              <option value={ item } key={ item } data-testid={ item }>\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={ this.editWallet }>Editar despesa</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: (expense) => dispatch(addExpenses(expense)),\n  edExpense: (id) => dispatch(editExpense(id)),\n  edit: (expenseEdit, newData) => dispatch(editing(expenseEdit, newData)),\n});\n\nconst mapStateToProps = ({ wallet, edit }) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n  expenseEdit: edit.inEditing.expenseEdit,\n});\n\nEditWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  expenseEdit: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  edExpense: PropTypes.func.isRequired,\n  edit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWallet);\n"]},"metadata":{},"sourceType":"module"}