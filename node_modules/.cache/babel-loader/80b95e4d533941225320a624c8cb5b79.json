{"ast":null,"code":"var _jsxFileName = \"/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/components/Header.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport carteira from \"../imgs/carteira.svg\";\n\nclass Header extends React.Component {\n  render() {\n    const {\n      email,\n      expenses\n    } = this.props;\n    let amount = 0;\n\n    if (expenses.length > 0) {\n      expenses.forEach(element => {\n        const value = parseFloat(element.value);\n        const {\n          currency\n        } = element;\n        const valueCurrency = parseFloat(element.exchangeRates[currency].ask);\n        const valueConvert = value * valueCurrency;\n        amount += parseFloat(valueConvert);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: carteira,\n      alt: \"imagem da carteira\",\n      width: \"80px\",\n      height: \"80px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"email-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, \"Email:\", email), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-amount\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"total-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, \"Despesa Total: R$\", amount.toFixed(2)), /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"header-currency-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, \"BRL\"))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.shape([]).isRequired\n};\nexport default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/components/Header.js"],"names":["React","connect","PropTypes","Header","Component","render","email","expenses","props","amount","length","forEach","element","value","parseFloat","currency","valueCurrency","exchangeRates","ask","valueConvert","carteira","toFixed","mapStateToProps","state","user","wallet","propTypes","string","isRequired","shape"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAGA,MAAMC,MAAN,SAAqBH,KAAK,CAACI,SAA3B,CAAqC;AACnCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA;AAAT,QAAsB,KAAKC,KAAjC;AACA,QAAIC,MAAM,GAAG,CAAb;;AACA,QAAIF,QAAQ,CAACG,MAAT,GAAkB,CAAtB,EAAyB;AACvBH,MAAAA,QAAQ,CAACI,OAAT,CAAkBC,OAAD,IAAa;AAC5B,cAAMC,KAAK,GAAGC,UAAU,CAACF,OAAO,CAACC,KAAT,CAAxB;AACA,cAAM;AAAEE,UAAAA;AAAF,YAAeH,OAArB;AACA,cAAMI,aAAa,GAAIF,UAAU,CAACF,OAAO,CAACK,aAAR,CAAsBF,QAAtB,EAAgCG,GAAjC,CAAjC;AACA,cAAMC,YAAY,GAAGN,KAAK,GAAGG,aAA7B;AACAP,QAAAA,MAAM,IAAKK,UAAU,CAACK,YAAD,CAArB;AACD,OAND;AAOD;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAGC,QAAX;AAAsB,MAAA,GAAG,EAAC,oBAA1B;AAA+C,MAAA,KAAK,EAAC,MAArD;AAA4D,MAAA,MAAM,EAAC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,qBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAEId,KAFJ,CADF,eAKE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,qBAAY,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAEGG,MAAM,CAACY,OAAP,CAAe,CAAf,CAFH,CADF,eAKE;AAAM,qBAAY,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,CALF,CAFF,CADF;AAoBD;;AAjCkC;;AAoCrC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCjB,EAAAA,KAAK,EAAEiB,KAAK,CAACC,IAAN,CAAWlB,KADgB;AAElCC,EAAAA,QAAQ,EAAEgB,KAAK,CAACE,MAAN,CAAalB;AAFW,CAAZ,CAAxB;;AAKAJ,MAAM,CAACuB,SAAP,GAAmB;AACjBpB,EAAAA,KAAK,EAAEJ,SAAS,CAACyB,MAAV,CAAiBC,UADP;AAEjBrB,EAAAA,QAAQ,EAAEL,SAAS,CAAC2B,KAAV,CAAgB,EAAhB,EAAoBD;AAFb,CAAnB;AAKA,eAAe3B,OAAO,CAACqB,eAAD,CAAP,CAAyBnB,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport carteira from '../imgs/carteira.svg';\n\nclass Header extends React.Component {\n  render() {\n    const { email, expenses } = this.props;\n    let amount = 0;\n    if (expenses.length > 0) {\n      expenses.forEach((element) => {\n        const value = parseFloat(element.value);\n        const { currency } = element;\n        const valueCurrency = (parseFloat(element.exchangeRates[currency].ask));\n        const valueConvert = value * valueCurrency;\n        amount += (parseFloat(valueConvert));\n      });\n    }\n    return (\n      <div className=\"container-header\">\n        <img src={ carteira } alt=\"imagem da carteira\" width=\"80px\" height=\"80px\" />\n        <div className=\"container-info\">\n          <span data-testid=\"email-field\">\n            Email:\n            { email }\n          </span>\n          <div className=\"container-amount\">\n            <span data-testid=\"total-field\">\n              Despesa Total: R$\n              {amount.toFixed(2)}\n            </span>\n            <span data-testid=\"header-currency-field\">\n              BRL\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.shape([]).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}