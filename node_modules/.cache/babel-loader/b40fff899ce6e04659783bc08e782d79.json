{"ast":null,"code":"// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport { CURRENCY_QUERY, ADD_EXPENSES, DELETE_EXPENSE, EDITING } from '../actions';\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  inEditing: {\n    edit: false,\n    expenseEdit: {}\n  }\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case CURRENCY_QUERY:\n      return { ...state,\n        currencies: action.currencies\n      };\n\n    case ADD_EXPENSES:\n      return { ...state,\n        expenses: [...state.expenses, {\n          id: state.expenses.length,\n          value: action.expense.value,\n          description: action.expense.description,\n          currency: action.expense.currency,\n          method: action.expense.method,\n          tag: action.expense.tag,\n          exchangeRates: action.expense.exchangeRates\n        }]\n      };\n\n    case DELETE_EXPENSE:\n      return { ...state,\n        expenses: state.expenses.filter(expense => expense.id !== action.id)\n      };\n\n    case EDITING:\n      return { ...state,\n        expenses: [...state.expenses.map(expense => {\n          if (expense.id !== action.expenseEdit.id) {\n            return expense;\n          }\n\n          return {\n            id: action.expenseEdit.id,\n            value: action.newData.value,\n            description: action.newData.description,\n            currency: action.newData.currency,\n            method: action.newData.method,\n            tag: action.newData.tag,\n            exchangeRates: action.expenseEdit.exchangeRates\n          };\n        })]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default wallet;","map":{"version":3,"sources":["/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/reducers/wallet.js"],"names":["CURRENCY_QUERY","ADD_EXPENSES","DELETE_EXPENSE","EDITING","INITIAL_STATE","currencies","expenses","inEditing","edit","expenseEdit","wallet","state","action","type","id","length","value","expense","description","currency","method","tag","exchangeRates","filter","map","newData"],"mappings":"AAAA;AACA,SACEA,cADF,EAEEC,YAFF,EAGEC,cAHF,EAIEC,OAJF,QAKO,YALP;AAOA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,UAAU,EAAE,EADQ;AAEpBC,EAAAA,QAAQ,EAAE,EAFU;AAGpBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,KADG;AAETC,IAAAA,WAAW,EAAE;AAFJ;AAHS,CAAtB;;AASA,MAAMC,MAAM,GAAG,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAxB,KAAmC;AAChD,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKb,cAAL;AACE,aAAO,EAAE,GAAGW,KAAL;AAAYN,QAAAA,UAAU,EAAEO,MAAM,CAACP;AAA/B,OAAP;;AACF,SAAKJ,YAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELL,QAAAA,QAAQ,EAAE,CACR,GAAGK,KAAK,CAACL,QADD,EAER;AACEQ,UAAAA,EAAE,EAAEH,KAAK,CAACL,QAAN,CAAeS,MADrB;AAEEC,UAAAA,KAAK,EAAEJ,MAAM,CAACK,OAAP,CAAeD,KAFxB;AAGEE,UAAAA,WAAW,EAAEN,MAAM,CAACK,OAAP,CAAeC,WAH9B;AAIEC,UAAAA,QAAQ,EAAEP,MAAM,CAACK,OAAP,CAAeE,QAJ3B;AAKEC,UAAAA,MAAM,EAAER,MAAM,CAACK,OAAP,CAAeG,MALzB;AAMEC,UAAAA,GAAG,EAAET,MAAM,CAACK,OAAP,CAAeI,GANtB;AAOEC,UAAAA,aAAa,EAAEV,MAAM,CAACK,OAAP,CAAeK;AAPhC,SAFQ;AAFL,OAAP;;AAeF,SAAKpB,cAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELL,QAAAA,QAAQ,EAAEK,KAAK,CAACL,QAAN,CAAeiB,MAAf,CAAuBN,OAAD,IAAaA,OAAO,CAACH,EAAR,KAAeF,MAAM,CAACE,EAAzD;AAFL,OAAP;;AAIF,SAAKX,OAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELL,QAAAA,QAAQ,EAAE,CACR,GAAGK,KAAK,CAACL,QAAN,CAAekB,GAAf,CAAoBP,OAAD,IAAa;AACjC,cAAIA,OAAO,CAACH,EAAR,KAAeF,MAAM,CAACH,WAAP,CAAmBK,EAAtC,EAA0C;AACxC,mBAAOG,OAAP;AACD;;AAAC,iBACA;AAAEH,YAAAA,EAAE,EAAEF,MAAM,CAACH,WAAP,CAAmBK,EAAzB;AACEE,YAAAA,KAAK,EAAEJ,MAAM,CAACa,OAAP,CAAeT,KADxB;AAEEE,YAAAA,WAAW,EAAEN,MAAM,CAACa,OAAP,CAAeP,WAF9B;AAGEC,YAAAA,QAAQ,EAAEP,MAAM,CAACa,OAAP,CAAeN,QAH3B;AAIEC,YAAAA,MAAM,EAAER,MAAM,CAACa,OAAP,CAAeL,MAJzB;AAKEC,YAAAA,GAAG,EAAET,MAAM,CAACa,OAAP,CAAeJ,GALtB;AAMEC,YAAAA,aAAa,EAAEV,MAAM,CAACH,WAAP,CAAmBa;AANpC,WADA;AAUH,SAbE,CADK;AAFL,OAAP;;AAmBF;AACE,aAAOX,KAAP;AA7CF;AA+CD,CAhDD;;AAkDA,eAAeD,MAAf","sourcesContent":["// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport {\n  CURRENCY_QUERY,\n  ADD_EXPENSES,\n  DELETE_EXPENSE,\n  EDITING,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n  inEditing: {\n    edit: false,\n    expenseEdit: {},\n  },\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case CURRENCY_QUERY:\n    return { ...state, currencies: action.currencies };\n  case ADD_EXPENSES:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses,\n        {\n          id: state.expenses.length,\n          value: action.expense.value,\n          description: action.expense.description,\n          currency: action.expense.currency,\n          method: action.expense.method,\n          tag: action.expense.tag,\n          exchangeRates: action.expense.exchangeRates,\n        },\n      ],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.id),\n    };\n  case EDITING:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses.map((expense) => {\n          if (expense.id !== action.expenseEdit.id) {\n            return expense;\n          } return (\n            { id: action.expenseEdit.id,\n              value: action.newData.value,\n              description: action.newData.description,\n              currency: action.newData.currency,\n              method: action.newData.method,\n              tag: action.newData.tag,\n              exchangeRates: action.expenseEdit.exchangeRates,\n            }\n          );\n        }),\n      ],\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n"]},"metadata":{},"sourceType":"module"}