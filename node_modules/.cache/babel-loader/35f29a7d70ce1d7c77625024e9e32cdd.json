{"ast":null,"code":"var _jsxFileName = \"/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/components/FormWallet.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses, editExpense, editing } from '../actions';\n\nclass FormWallet extends Component {\n  constructor(props) {\n    super(props);\n    this.changeValue = this.changeValue.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.editWallet = this.editWallet.bind(this);\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {}\n    };\n  }\n\n  componentDidMount() {\n    const {\n      fetchAPI\n    } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  async handleClick() {\n    const {\n      fetchAPI\n    } = this.props;\n    await fetchAPI();\n    const {\n      add,\n      currencies\n    } = this.props;\n    this.setState({\n      exchangeRates: currencies\n    });\n    add(this.state);\n    this.setState({\n      value: '',\n      description: ''\n    });\n  }\n  /* editWallet() {\n    const { edExpense, edit, expenseEdit } = this.props;\n    edit(expenseEdit, this.state);\n    edExpense();\n    this.setState({ value: '', description: '' });\n  } */\n\n\n  render() {\n    const {\n      value,\n      description\n    } = this.state;\n    const {\n      currencies,\n      inEditing\n    } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter(i => i !== 'USDT');\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Valor:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"value-input\",\n      id: \"value\",\n      name: \"value\",\n      type: \"text\",\n      value: value,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Descri\\xE7\\xE3o:\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"description-input\",\n      id: \"description\",\n      name: \"description\",\n      type: \"text\",\n      value: description,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"currency\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }, \"Moeda:\", /*#__PURE__*/React.createElement(\"select\", {\n      id: \"currency\",\n      name: \"currency\",\n      \"data-testid\": \"currency-input\",\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }\n    }, arrayCurrencies && arrayCurrencies.map(item => /*#__PURE__*/React.createElement(\"option\", {\n      value: item,\n      key: item,\n      \"data-testid\": item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, item)))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"method\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, \"M\\xE9todo de Pagamento:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"method-input\",\n      name: \"method\",\n      id: \"method\",\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Dinheiro\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, \"Dinheiro\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de cr\\xE9dito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de cr\\xE9dito\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Cart\\xE3o de d\\xE9bito\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Cart\\xE3o de d\\xE9bito\"))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"tag\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }, \"Tag:\", /*#__PURE__*/React.createElement(\"select\", {\n      \"data-testid\": \"tag-input\",\n      name: \"tag\",\n      id: \"tag\",\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Alimenta\\xE7\\xE3o\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, \"Alimenta\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Lazer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Lazer\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Trabalho\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Trabalho\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Transporte\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }\n    }, \"Transporte\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Sa\\xFAde\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, \"Sa\\xFAde\"))), inEditing ? /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.editWallet,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    }, \"Editar despesa\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 13\n      }\n    }, \"Adicionar despesa\"));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: expense => dispatch(addExpenses(expense)),\n  edExpense: id => dispatch(editExpense(id)),\n  edit: (expenseEdit, newData) => dispatch(editing(expenseEdit, newData))\n});\n\nconst mapStateToProps = ({\n  wallet\n}) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n  inEditing: wallet.inEditing.edit,\n  expenseEdit: wallet.inEditing.expenseEdit\n});\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  add: PropTypes.func.isRequired,\n  inEditing: PropTypes.bool.isRequired,\n  expenseEdit: PropTypes.shape({}).isRequired,\n  // edExpense: PropTypes.func.isRequired,\n  // edit: PropTypes.func.isRequired,\n  exchangeRates: PropTypes.shape({}).isRequired\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);","map":{"version":3,"sources":["/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/components/FormWallet.js"],"names":["React","Component","PropTypes","connect","fecthAwesome","addExpenses","editExpense","editing","FormWallet","constructor","props","changeValue","bind","handleClick","editWallet","state","value","description","currency","method","tag","exchangeRates","componentDidMount","fetchAPI","target","name","setState","add","currencies","render","inEditing","arrayCurrencies","Object","keys","filter","i","map","item","mapDispatchToProps","dispatch","expense","edExpense","id","edit","expenseEdit","newData","mapStateToProps","wallet","expenses","propTypes","func","isRequired","shape","bool"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses, editExpense, editing } from '../actions';\n\nclass FormWallet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n    this.editWallet = this.editWallet.bind(this);\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  async handleClick() {\n    const { fetchAPI } = this.props;\n    await fetchAPI();\n    const { add, currencies } = this.props;\n    this.setState({ exchangeRates: currencies });\n    add(this.state);\n    this.setState({ value: '', description: '' });\n  }\n\n  /* editWallet() {\n    const { edExpense, edit, expenseEdit } = this.props;\n    edit(expenseEdit, this.state);\n    edExpense();\n    this.setState({ value: '', description: '' });\n  } */\n\n  render() {\n    const { value, description } = this.state;\n    const { currencies, inEditing } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter((i) => i !== 'USDT');\n    return (\n      <form className=\"form\">\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            id=\"value\"\n            name=\"value\"\n            type=\"text\"\n            value={ value }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={ description }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ this.changeValue }\n          >\n            {arrayCurrencies && arrayCurrencies.map((item) => (\n              <option value={ item } key={ item } data-testid={ item }>\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        {inEditing\n          ? <button type=\"button\" onClick={ this.editWallet }>Editar despesa</button>\n          : <button type=\"button\" onClick={ this.handleClick }>Adicionar despesa</button>}\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: (expense) => dispatch(addExpenses(expense)),\n  edExpense: (id) => dispatch(editExpense(id)),\n  edit: (expenseEdit, newData) => dispatch(editing(expenseEdit, newData)),\n});\n\nconst mapStateToProps = ({ wallet }) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n  inEditing: wallet.inEditing.edit,\n  expenseEdit: wallet.inEditing.expenseEdit,\n});\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  add: PropTypes.func.isRequired,\n  inEditing: PropTypes.bool.isRequired,\n  expenseEdit: PropTypes.shape({}).isRequired,\n  // edExpense: PropTypes.func.isRequired,\n  // edit: PropTypes.func.isRequired,\n  exchangeRates: PropTypes.shape({}).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n"]},"metadata":{},"sourceType":"module"}