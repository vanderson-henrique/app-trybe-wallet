{"ast":null,"code":"import { EDIT_EXPENSE, EDITING } from '../actions';\nconst INITIAL_STATE = {\n  inEditing: {\n    edit: false,\n    expenseEdit: {}\n  }\n};\n\nconst edit = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case EDIT_EXPENSE:\n      return { ...state,\n        inEditing: {\n          edit: !state.inEditing.edit,\n          expenseEdit: action.expenseEdit\n        }\n      };\n\n    case EDITING:\n      return { ...state,\n        expenses: [...state.expenses.map(expense => {\n          if (expense.id !== action.expenseEdit.id) {\n            return expense;\n          }\n\n          return {\n            id: action.expenseEdit.id,\n            value: action.newData.value,\n            description: action.newData.description,\n            currency: action.newData.currency,\n            method: action.newData.method,\n            tag: action.newData.tag,\n            exchangeRates: action.expenseEdit.exchangeRates\n          };\n        })]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default edit;","map":{"version":3,"sources":["/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/reducers/edit.js"],"names":["EDIT_EXPENSE","EDITING","INITIAL_STATE","inEditing","edit","expenseEdit","state","action","type","expenses","map","expense","id","value","newData","description","currency","method","tag","exchangeRates"],"mappings":"AAAA,SACEA,YADF,EAEEC,OAFF,QAGO,YAHP;AAKA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,KADG;AAETC,IAAAA,WAAW,EAAE;AAFJ;AADS,CAAtB;;AAOA,MAAMD,IAAI,GAAG,CAACE,KAAK,GAAGJ,aAAT,EAAwBK,MAAxB,KAAmC;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACA,SAAKR,YAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELH,QAAAA,SAAS,EAAE;AACTC,UAAAA,IAAI,EAAE,CAACE,KAAK,CAACH,SAAN,CAAgBC,IADd;AAETC,UAAAA,WAAW,EAAEE,MAAM,CAACF;AAFX;AAFN,OAAP;;AAOF,SAAKJ,OAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELG,QAAAA,QAAQ,EAAE,CACR,GAAGH,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAoBC,OAAD,IAAa;AACjC,cAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACF,WAAP,CAAmBO,EAAtC,EAA0C;AACxC,mBAAOD,OAAP;AACD;;AAAC,iBACA;AAAEC,YAAAA,EAAE,EAAEL,MAAM,CAACF,WAAP,CAAmBO,EAAzB;AACEC,YAAAA,KAAK,EAAEN,MAAM,CAACO,OAAP,CAAeD,KADxB;AAEEE,YAAAA,WAAW,EAAER,MAAM,CAACO,OAAP,CAAeC,WAF9B;AAGEC,YAAAA,QAAQ,EAAET,MAAM,CAACO,OAAP,CAAeE,QAH3B;AAIEC,YAAAA,MAAM,EAAEV,MAAM,CAACO,OAAP,CAAeG,MAJzB;AAKEC,YAAAA,GAAG,EAAEX,MAAM,CAACO,OAAP,CAAeI,GALtB;AAMEC,YAAAA,aAAa,EAAEZ,MAAM,CAACF,WAAP,CAAmBc;AANpC,WADA;AAUH,SAbE,CADK;AAFL,OAAP;;AAmBF;AACE,aAAOb,KAAP;AA9BF;AAgCD,CAjCD;;AAmCA,eAAeF,IAAf","sourcesContent":["import {\n  EDIT_EXPENSE,\n  EDITING,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  inEditing: {\n    edit: false,\n    expenseEdit: {},\n  },\n};\n\nconst edit = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      inEditing: {\n        edit: !state.inEditing.edit,\n        expenseEdit: action.expenseEdit,\n      },\n    };\n  case EDITING:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses.map((expense) => {\n          if (expense.id !== action.expenseEdit.id) {\n            return expense;\n          } return (\n            { id: action.expenseEdit.id,\n              value: action.newData.value,\n              description: action.newData.description,\n              currency: action.newData.currency,\n              method: action.newData.method,\n              tag: action.newData.tag,\n              exchangeRates: action.expenseEdit.exchangeRates,\n            }\n          );\n        }),\n      ],\n    };\n  default:\n    return state;\n  }\n};\n\nexport default edit;\n"]},"metadata":{},"sourceType":"module"}