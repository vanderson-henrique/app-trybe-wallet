{"ast":null,"code":"var _jsxFileName = \"/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/pages/Login.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginAction } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.changeValue = this.changeValue.bind(this);\n    this.clickLogin = this.clickLogin.bind(this);\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  changeValue({\n    target\n  }) {\n    const {\n      name,\n      value\n    } = target;\n    this.setState({\n      [name]: value\n    });\n  }\n\n  clickLogin() {\n    const {\n      login,\n      history\n    } = this.props;\n    const {\n      email\n    } = this.state;\n    login(email);\n    return history.push('/carteira');\n  } // Referência desta função para validação de email:\n  // https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n\n\n  validarEmail(email) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  render() {\n    const {\n      email,\n      password\n    } = this.state;\n    const numberCharacteres = 5;\n    const validate = password.length > numberCharacteres && this.validarEmail(email);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, \"Trybe Wallet\"), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form form-login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }, \"Email\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"email-input\",\n      placeholder: \"Insira seu e-mail\",\n      id: \"email\",\n      name: \"email\",\n      type: \"text\",\n      value: email,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, \"Password\", /*#__PURE__*/React.createElement(\"input\", {\n      \"data-testid\": \"password-input\",\n      placeholder: \"Insira sua senha\",\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      value: password,\n      onChange: this.changeValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    })), !validate ? /*#__PURE__*/React.createElement(\"button\", {\n      disabled: true,\n      type: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, \"Entrar\") : /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.clickLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Entrar\")));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  login: email => dispatch(loginAction(email))\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default connect(null, mapDispatchToProps)(Login);","map":{"version":3,"sources":["/home/vanderson/Trybe/projetos_trybe/BLOCO_16/sd-07-project-trybewallet/src/pages/Login.js"],"names":["React","PropTypes","connect","loginAction","Login","Component","constructor","props","changeValue","bind","clickLogin","state","email","password","target","name","value","setState","login","history","push","validarEmail","re","test","render","numberCharacteres","validate","length","mapDispatchToProps","dispatch","propTypes","func","isRequired","shape"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginAction } from '../actions';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.clickLogin = this.clickLogin.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n    };\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  clickLogin() {\n    const { login, history } = this.props;\n    const { email } = this.state;\n    login(email);\n    return history.push('/carteira');\n  }\n\n  // Referência desta função para validação de email:\n  // https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n  validarEmail(email) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  render() {\n    const { email, password } = this.state;\n    const numberCharacteres = 5;\n    const validate = password.length > numberCharacteres && this.validarEmail(email);\n    return (\n      <div className=\"container-login\">\n        <h1>Trybe Wallet</h1>\n        <form className=\"form form-login\">\n          <label htmlFor=\"email\">\n            Email\n            <input\n              data-testid=\"email-input\"\n              placeholder=\"Insira seu e-mail\"\n              id=\"email\"\n              name=\"email\"\n              type=\"text\"\n              value={ email }\n              onChange={ this.changeValue }\n            />\n          </label>\n          <label htmlFor=\"password\">\n            Password\n            <input\n              data-testid=\"password-input\"\n              placeholder=\"Insira sua senha\"\n              id=\"password\"\n              name=\"password\"\n              type=\"password\"\n              value={ password }\n              onChange={ this.changeValue }\n            />\n          </label>\n          {!validate ? (\n            <button disabled type=\"button\">\n              Entrar\n            </button>\n          ) : (\n            <button type=\"button\" onClick={ this.clickLogin }>\n              Entrar\n            </button>\n          )}\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (email) => dispatch(loginAction(email)),\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n"]},"metadata":{},"sourceType":"module"}