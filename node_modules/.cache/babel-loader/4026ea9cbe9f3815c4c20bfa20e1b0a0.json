{"ast":null,"code":"import _classCallCheck from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/vanderson/Trybe/repo_projetos/trybe-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import carteira from\"../imgs/carteira.svg\";var Header=/*#__PURE__*/function(_React$Component){_inherits(Header,_React$Component);var _super=_createSuper(Header);function Header(){_classCallCheck(this,Header);return _super.apply(this,arguments);}_createClass(Header,[{key:\"render\",value:function render(){var _this$props=this.props,email=_this$props.email,expenses=_this$props.expenses;var amount=0;if(expenses.length>0){expenses.forEach(function(element){var value=parseFloat(element.value);var currency=element.currency;var valueCurrency=parseFloat(element.exchangeRates[currency].ask);var valueConvert=value*valueCurrency;amount+=parseFloat(valueConvert);});}return/*#__PURE__*/React.createElement(\"div\",{className:\"container-header\"},/*#__PURE__*/React.createElement(\"img\",{src:carteira,alt:\"imagem da carteira\",width:\"80px\",height:\"80px\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"container-info\"},/*#__PURE__*/React.createElement(\"span\",{\"data-testid\":\"email-field\"},\"Email:\",email),/*#__PURE__*/React.createElement(\"div\",{className:\"container-amount\"},/*#__PURE__*/React.createElement(\"span\",{\"data-testid\":\"total-field\"},\"Despesa Total: R$\",amount.toFixed(2)),/*#__PURE__*/React.createElement(\"span\",{\"data-testid\":\"header-currency-field\"},\"BRL\"))));}}]);return Header;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{email:state.user.email,expenses:state.wallet.expenses};};export default connect(mapStateToProps)(Header);","map":{"version":3,"sources":["/home/vanderson/Trybe/repo_projetos/trybe-wallet/src/components/Header.js"],"names":["React","connect","Header","props","email","expenses","amount","length","forEach","element","value","parseFloat","currency","valueCurrency","exchangeRates","ask","valueConvert","carteira","toFixed","Component","mapStateToProps","state","user","wallet"],"mappings":"4oBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,OAAT,KAAwB,aAAxB,C,8CAIMC,CAAAA,M,0PACK,iBACqB,KAAKC,KAD1B,CACCC,KADD,aACCA,KADD,CACQC,QADR,aACQA,QADR,CAEP,GAAIC,CAAAA,MAAM,CAAG,CAAb,CACA,GAAID,QAAQ,CAACE,MAAT,CAAkB,CAAtB,CAAyB,CACvBF,QAAQ,CAACG,OAAT,CAAiB,SAACC,OAAD,CAAa,CAC5B,GAAMC,CAAAA,KAAK,CAAGC,UAAU,CAACF,OAAO,CAACC,KAAT,CAAxB,CAD4B,GAEpBE,CAAAA,QAFoB,CAEPH,OAFO,CAEpBG,QAFoB,CAG5B,GAAMC,CAAAA,aAAa,CAAIF,UAAU,CAACF,OAAO,CAACK,aAAR,CAAsBF,QAAtB,EAAgCG,GAAjC,CAAjC,CACA,GAAMC,CAAAA,YAAY,CAAGN,KAAK,CAAGG,aAA7B,CACAP,MAAM,EAAKK,UAAU,CAACK,YAAD,CAArB,CACD,CAND,EAOD,CACD,mBACE,2BAAK,SAAS,CAAC,kBAAf,eACE,2BAAK,GAAG,CAAGC,QAAX,CAAsB,GAAG,CAAC,oBAA1B,CAA+C,KAAK,CAAC,MAArD,CAA4D,MAAM,CAAC,MAAnE,EADF,cAEE,2BAAK,SAAS,CAAC,gBAAf,eACE,4BAAM,cAAY,aAAlB,WAEIb,KAFJ,CADF,cAKE,2BAAK,SAAS,CAAC,kBAAf,eACE,4BAAM,cAAY,aAAlB,sBAEGE,MAAM,CAACY,OAAP,CAAe,CAAf,CAFH,CADF,cAKE,4BAAM,cAAY,uBAAlB,QALF,CALF,CAFF,CADF,CAoBD,C,oBAjCkBlB,KAAK,CAACmB,S,EAoC3B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAY,CAClCjB,KAAK,CAAEiB,KAAK,CAACC,IAAN,CAAWlB,KADgB,CAElCC,QAAQ,CAAEgB,KAAK,CAACE,MAAN,CAAalB,QAFW,CAAZ,EAAxB,CAUA,cAAeJ,CAAAA,OAAO,CAACmB,eAAD,CAAP,CAAyBlB,MAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport carteira from '../imgs/carteira.svg';\n\nclass Header extends React.Component {\n  render() {\n    const { email, expenses } = this.props;\n    let amount = 0;\n    if (expenses.length > 0) {\n      expenses.forEach((element) => {\n        const value = parseFloat(element.value);\n        const { currency } = element;\n        const valueCurrency = (parseFloat(element.exchangeRates[currency].ask));\n        const valueConvert = value * valueCurrency;\n        amount += (parseFloat(valueConvert));\n      });\n    }\n    return (\n      <div className=\"container-header\">\n        <img src={ carteira } alt=\"imagem da carteira\" width=\"80px\" height=\"80px\" />\n        <div className=\"container-info\">\n          <span data-testid=\"email-field\">\n            Email:\n            { email }\n          </span>\n          <div className=\"container-amount\">\n            <span data-testid=\"total-field\">\n              Despesa Total: R$\n              {amount.toFixed(2)}\n            </span>\n            <span data-testid=\"header-currency-field\">\n              BRL\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.shape([]).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}