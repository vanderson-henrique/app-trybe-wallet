{"version":3,"sources":["imgs/carteira.svg","imgs/btn-excluir.svg","imgs/btn-editar.svg","services/awesomeApi.js","actions/index.js","pages/Login.js","components/Header.js","components/FormWallet.js","components/ExpenseTable.js","components/EditWallet.js","pages/Wallet.js","App.js","reducers/user.js","reducers/wallet.js","reducers/edit.js","reducers/index.js","store/index.js","serviceWorker.js","index.js"],"names":["module","exports","awesomeApi","fetch","then","response","json","ok","Promise","resolve","reject","addExpenses","expense","type","editExpense","expenseEdit","fecthAwesome","dispatch","currencies","error","receiveFailure","Login","props","changeValue","bind","clickLogin","verifyFields","state","email","password","isDisabled","target","name","value","this","setState","login","history","push","test","length","validarEmail","className","Form","Group","controlId","Label","htmlFor","Control","data-testid","id","onChange","placeholder","Button","variant","disabled","onClick","React","Component","connect","loginAction","Header","expenses","amount","forEach","element","parseFloat","currency","valueCurrency","exchangeRates","ask","src","carteira","alt","width","height","toFixed","user","wallet","FormWallet","handleClick","description","method","tag","fetchAPI","add","arrayCurrencies","Object","keys","filter","i","map","item","key","ExpenseTable","dellExpense","edExpense","moeda","currencyExchange","valueExchange","btnEditar","btnExcluir","deleteExpense","EditWallet","editWallet","edit","inEditing","newData","editing","Wallet","App","exact","path","component","action","INITIAL_STATE","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.7c9c3b06.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/carteira.ba775a0a.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn-excluir.971f6359.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn-editar.3e7d8b5e.svg\";","const awesomeApi = () => (\n  fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => (\n      response\n        .json()\n        .then((json) => (response.ok ? Promise.resolve(json) : Promise.reject(json)))\n    ))\n);\n\nexport default awesomeApi;\n","// Coloque aqui suas actions\nimport awesomeApi from '../services/awesomeApi';\n\nexport const LOGIN = 'LOGIN';\nexport const CURRENCY_QUERY = 'CURRENCY_QUERY';\nexport const ADD_EXPENSES = 'ADD_EXPENSES';\nexport const DELETE_EXPENSE = 'DELETE_EXPENSE';\nexport const RECEIVE_FAILURE = 'RECEIVE_FAILURE';\nexport const EDIT_EXPENSE = 'EDIT_EXPENSE';\nexport const EDITING = 'EDITING';\n\nexport const loginAction = (email) => ({\n  type: LOGIN,\n  email,\n});\n\nexport const currencyQuery = (currencies) => ({\n  type: CURRENCY_QUERY,\n  currencies,\n});\n\nexport const receiveFailure = (error) => ({\n  type: RECEIVE_FAILURE,\n  error,\n});\n\nexport const addExpenses = (expense) => ({\n  type: ADD_EXPENSES,\n  expense,\n});\n\nexport const deleteExpense = (id) => ({\n  type: DELETE_EXPENSE,\n  id,\n});\n\nexport const editExpense = (expenseEdit) => ({\n  type: EDIT_EXPENSE,\n  expenseEdit,\n});\n\nexport const editing = (expenseEdit, newData) => ({\n  type: EDITING,\n  expenseEdit,\n  newData,\n});\n\nexport const fecthAwesome = () => (\n  (dispatch) => (\n    awesomeApi().then(\n      (response) => dispatch(currencyQuery(response)),\n      (error) => dispatch(receiveFailure(error)),\n    )));\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Button, Form } from 'react-bootstrap';\nimport { loginAction } from '../actions';\nimport './login.css';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.clickLogin = this.clickLogin.bind(this);\n    this.verifyFields = this.verifyFields.bind(this);\n\n    this.state = {\n      email: '',\n      password: '',\n      isDisabled: true,\n    };\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({\n      [name]: value,\n    }, () => this.verifyFields());\n  }\n\n  clickLogin() {\n    const { login, history } = this.props;\n    const { email } = this.state;\n    login(email);\n    return history.push('/app-trybe-wallet/carteira');\n  }\n\n  // Referência desta função para validação de email:\n  // https://www.horadecodar.com.br/2020/09/07/expressao-regular-para-validar-e-mail-javascript-regex/\n  validarEmail(email) {\n    const re = /\\S+@\\S+\\.\\S+/;\n    return re.test(email);\n  }\n\n  verifyFields() {\n    const { email, password } = this.state;\n    const numberCharacteres = 5;\n    if (password.length > numberCharacteres && this.validarEmail(email)) {\n      this.setState({\n        isDisabled: false,\n      });\n    }\n  }\n\n  render() {\n    const { email, password, isDisabled } = this.state;\n    return (\n      <div className=\"container-form-login\">\n        <Form className=\"Form\">\n        <h1>Trybe Wallet</h1>\n        <Form.Group controlId=\"formBasicName\">\n          <Form.Label htmlFor=\"name\">\n            email\n          </Form.Label>\n          <Form.Control\n            className=\"input\"\n            data-testid=\"email-input\"\n            type=\"text\"\n            id=\"email\"\n            name=\"email\"\n            value={ email }\n            onChange={ this.changeValue }\n            placeholder=\"Insira um e-mail válido\"\n          />\n        </Form.Group>\n        <Form.Group controlId=\"formBasicName\">\n          <Form.Label htmlFor=\"name\">\n            password\n          </Form.Label>\n          <Form.Control\n            className=\"input\"\n            data-testid=\"password-input\"\n            type=\"password\"\n            id=\"password\"\n            name=\"password\"\n            value={ password }\n            onChange={ this.changeValue }\n            placeholder=\"Insira uma senha de 6 dígitos\"\n          />\n        </Form.Group>\n        <Button\n          variant=\"primary\"\n          type=\"button\"\n          disabled={ isDisabled }\n          onClick={ this.clickLogin }\n        >\n          Entrar\n        </Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  login: (email) => dispatch(loginAction(email)),\n});\n\nLogin.propTypes = {\n  login: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(Login);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport carteira from '../imgs/carteira.svg';\n\nclass Header extends React.Component {\n  render() {\n    const { email, expenses } = this.props;\n    let amount = 0;\n    if (expenses.length > 0) {\n      expenses.forEach((element) => {\n        const value = parseFloat(element.value);\n        const { currency } = element;\n        const valueCurrency = (parseFloat(element.exchangeRates[currency].ask));\n        const valueConvert = value * valueCurrency;\n        amount += (parseFloat(valueConvert));\n      });\n    }\n    return (\n      <div className=\"container-header\">\n        <img src={ carteira } alt=\"imagem da carteira\" width=\"80px\" height=\"80px\" />\n        <div className=\"container-info\">\n          <span data-testid=\"email-field\">\n            Email:\n            { email }\n          </span>\n          <div className=\"container-amount\">\n            <span data-testid=\"total-field\">\n              Despesa Total: R$\n              {amount.toFixed(2)}\n            </span>\n            <span data-testid=\"header-currency-field\">\n              BRL\n            </span>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  email: state.user.email,\n  expenses: state.wallet.expenses,\n});\n\nHeader.propTypes = {\n  email: PropTypes.string.isRequired,\n  expenses: PropTypes.shape([]).isRequired,\n};\n\nexport default connect(mapStateToProps)(Header);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses } from '../actions';\n\nclass FormWallet extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n\n    this.state = {\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  async handleClick() {\n    const { fetchAPI } = this.props;\n    await fetchAPI();\n    const { add, currencies } = this.props;\n    this.setState({ exchangeRates: currencies });\n    add(this.state);\n    this.setState({ value: '', description: '' });\n  }\n\n  render() {\n    const { value, description } = this.state;\n    const { currencies } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter((i) => i !== 'USDT');\n    return (\n      <form className=\"form\">\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            id=\"value\"\n            name=\"value\"\n            type=\"text\"\n            value={ value }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={ description }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ this.changeValue }\n          >\n            {arrayCurrencies && arrayCurrencies.map((item) => (\n              <option value={ item } key={ item } data-testid={ item }>\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={ this.handleClick }>Adicionar despesa</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: (expense) => dispatch(addExpenses(expense)),\n});\n\nconst mapStateToProps = ({ wallet }) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n});\n\nFormWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  add: PropTypes.func.isRequired,\n  expenseEdit: PropTypes.shape({}).isRequired,\n  exchangeRates: PropTypes.shape({}).isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormWallet);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { deleteExpense, editExpense } from '../actions';\nimport btnExcluir from '../imgs/btn-excluir.svg';\nimport btnEditar from '../imgs/btn-editar.svg';\n\nclass ExpenseTable extends React.Component {\n  render() {\n    const { expenses, dellExpense, edExpense } = this.props;\n    return (\n      <div>\n        <table className=\"table-header\">\n          <tr>\n            <td>Descrição</td>\n            <td>Tag</td>\n            <td>Método de pagamento</td>\n            <td>Valor</td>\n            <td>Moeda</td>\n            <td>Câmbio utilizado</td>\n            <td>Valor convertido</td>\n            <td>Moeda de conversão</td>\n            <td>Editar/Excluir</td>\n          </tr>\n        </table>\n        {expenses ? expenses.map((expense) => {\n          const {\n            value,\n            description,\n            tag,\n            method,\n            id,\n            exchangeRates,\n            currency,\n          } = expense;\n          const moeda = exchangeRates[currency].name;\n          const currencyExchange = exchangeRates[currency].ask;\n          const valueExchange = parseFloat(value) * currencyExchange;\n          return (\n            <table key={ id } className=\"table-data\">\n              <tr>\n                <td>{description}</td>\n                <td>{tag}</td>\n                <td>{method}</td>\n                <td>{value}</td>\n                <td>{moeda}</td>\n                <td>{parseFloat(currencyExchange).toFixed(2)}</td>\n                <td>{parseFloat(valueExchange).toFixed(2)}</td>\n                <td>Real</td>\n                <td>\n                  <button\n                    type=\"button\"\n                    data-testid=\"edit-btn\"\n                    onClick={ () => edExpense(expense) }\n                  >\n                    <img src={ btnEditar } alt=\"btnExcluir\" width=\"20px\" />\n                  </button>\n                  <button\n                    type=\"button\"\n                    data-testid=\"delete-btn\"\n                    onClick={ () => dellExpense(id) }\n                  >\n                    <img src={ btnExcluir } alt=\"btnExcluir\" width=\"20px\" />\n                  </button>\n                </td>\n              </tr>\n            </table>\n          );\n        }) : ''}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  expenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  dellExpense: (id) => dispatch(deleteExpense(id)),\n  edExpense: (expense) => dispatch(editExpense(expense)),\n});\n\nExpenseTable.propTypes = {\n  expenses: PropTypes.shape([]).isRequired,\n  dellExpense: PropTypes.func.isRequired,\n  edExpense: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExpenseTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fecthAwesome, addExpenses, editExpense, editing } from '../actions';\n\nclass EditWallet extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeValue = this.changeValue.bind(this);\n    this.editWallet = this.editWallet.bind(this);\n\n    const { expenseEdit } = this.props;\n\n    this.state = {\n      value: expenseEdit.value,\n      description: expenseEdit.description,\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n      exchangeRates: {},\n    };\n  }\n\n  componentDidMount() {\n    const { fetchAPI } = this.props;\n    fetchAPI();\n  }\n\n  changeValue({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  editWallet() {\n    const { edExpense, edit, expenseEdit } = this.props;\n    edit(expenseEdit, this.state);\n    edExpense();\n    this.setState({ value: '', description: '' });\n  }\n\n  render() {\n    const { value, description } = this.state;\n    const { currencies } = this.props;\n    const arrayCurrencies = Object.keys(currencies).filter((i) => i !== 'USDT');\n    return (\n      <form className=\"form-edit\">\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            data-testid=\"value-input\"\n            id=\"value\"\n            name=\"value\"\n            type=\"text\"\n            value={ value }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            data-testid=\"description-input\"\n            id=\"description\"\n            name=\"description\"\n            type=\"text\"\n            value={ description }\n            onChange={ this.changeValue }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda:\n          <select\n            id=\"currency\"\n            name=\"currency\"\n            data-testid=\"currency-input\"\n            onChange={ this.changeValue }\n          >\n            {arrayCurrencies && arrayCurrencies.map((item) => (\n              <option value={ item } key={ item } data-testid={ item }>\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de Pagamento:\n          <select\n            data-testid=\"method-input\"\n            name=\"method\"\n            id=\"method\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Dinheiro\">Dinheiro</option>\n            <option value=\"Cartão de crédito\">Cartão de crédito</option>\n            <option value=\"Cartão de débito\">Cartão de débito</option>\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Tag:\n          <select\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            id=\"tag\"\n            onChange={ this.changeValue }\n          >\n            <option value=\"Alimentação\">Alimentação</option>\n            <option value=\"Lazer\">Lazer</option>\n            <option value=\"Trabalho\">Trabalho</option>\n            <option value=\"Transporte\">Transporte</option>\n            <option value=\"Saúde\">Saúde</option>\n          </select>\n        </label>\n        <button type=\"button\" onClick={ this.editWallet }>Editar despesa</button>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchAPI: () => dispatch(fecthAwesome()),\n  add: (expense) => dispatch(addExpenses(expense)),\n  edExpense: (id) => dispatch(editExpense(id)),\n  edit: (expenseEdit, newData) => dispatch(editing(expenseEdit, newData)),\n});\n\nconst mapStateToProps = ({ wallet, edit }) => ({\n  currencies: wallet.currencies,\n  expenses: wallet.expenses,\n  expenseEdit: edit.inEditing.expenseEdit,\n});\n\nEditWallet.propTypes = {\n  fetchAPI: PropTypes.func.isRequired,\n  currencies: PropTypes.shape([]).isRequired,\n  expenseEdit: PropTypes.shape({\n    value: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n  edExpense: PropTypes.func.isRequired,\n  edit: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditWallet);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Header from '../components/Header';\nimport FormWallet from '../components/FormWallet';\nimport ExpenseTable from '../components/ExpenseTable';\nimport EditWallet from '../components/EditWallet';\n\nclass Wallet extends React.Component {\n  render() {\n    const { inEditing } = this.props;\n    return (\n      <div>\n        <Header />\n        { inEditing ? <EditWallet /> : <FormWallet />}\n        <ExpenseTable />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ edit }) => ({\n  inEditing: edit.inEditing.edit,\n  expenseEdit: edit.inEditing.expenseEdit,\n});\n\nWallet.propTypes = {\n  inEditing: PropTypes.bool.isRequired,\n  expenseEdit: PropTypes.shape({}).isRequired,\n};\n\nexport default connect(mapStateToProps)(Wallet);\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport './App.css';\n\nfunction App() {\n  return (\n    <Switch>\n      <Route exact path=\"/app-trybe-wallet\" component={ Login } />\n      <Route path=\"/app-trybe-wallet/carteira\" component={ Wallet } />\n    </Switch>\n  );\n}\n\nexport default App;\n","// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { LOGIN } from '../actions';\n\nconst user = (state = {}, action) => {\n  switch (action.type) {\n  case LOGIN:\n    return { ...state, email: action.email };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n","// Esse reducer será responsável por tratar o todas as informações relacionadas as despesas\nimport {\n  CURRENCY_QUERY,\n  ADD_EXPENSES,\n  DELETE_EXPENSE,\n  EDITING,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  currencies: [],\n  expenses: [],\n};\n\nconst wallet = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case CURRENCY_QUERY:\n    return { ...state, currencies: action.currencies };\n  case ADD_EXPENSES:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses,\n        {\n          id: state.expenses.length,\n          value: action.expense.value,\n          description: action.expense.description,\n          currency: action.expense.currency,\n          method: action.expense.method,\n          tag: action.expense.tag,\n          exchangeRates: action.expense.exchangeRates,\n        },\n      ],\n    };\n  case DELETE_EXPENSE:\n    return {\n      ...state,\n      expenses: state.expenses.filter((expense) => expense.id !== action.id),\n    };\n  case EDITING:\n    return {\n      ...state,\n      expenses: [\n        ...state.expenses.map((expense) => {\n          if (expense.id !== action.expenseEdit.id) {\n            return expense;\n          } return (\n            { id: action.expenseEdit.id,\n              value: action.newData.value,\n              description: action.newData.description,\n              currency: action.newData.currency,\n              method: action.newData.method,\n              tag: action.newData.tag,\n              exchangeRates: action.expenseEdit.exchangeRates,\n            }\n          );\n        }),\n      ],\n    };\n  default:\n    return state;\n  }\n};\n\nexport default wallet;\n","import {\n  EDIT_EXPENSE,\n} from '../actions';\n\nconst INITIAL_STATE = {\n  inEditing: {\n    edit: false,\n    expenseEdit: {},\n  },\n};\n\nconst edit = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case EDIT_EXPENSE:\n    return {\n      ...state,\n      inEditing: {\n        edit: !state.inEditing.edit,\n        expenseEdit: action.expenseEdit,\n      },\n    };\n  default:\n    return state;\n  }\n};\n\nexport default edit;\n","import { combineReducers } from 'redux';\nimport user from './user';\nimport wallet from './wallet';\nimport edit from './edit';\n\n// Configure os seus reducers.\n// ATENÇÃO: você obrigatoriamente tem que utilizar as chaves \"user\" e \"wallet\" no seu estado global\n\nconst rootReducer = combineReducers({ user, wallet, edit });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}